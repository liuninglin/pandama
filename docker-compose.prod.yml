version: "3.1"

services:
  postgres:
    environment:
      - POSTGRES_USER=pandama
      - POSTGRES_PASSWORD=pandama
      - POSTGRES_DB=pandama
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    restart: always
    command: redis-server --requirepass pandama
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mongodb:
    environment:
      - MONGO_INITDB_ROOT_USERNAME=pandama
      - MONGO_INITDB_ROOT_PASSWORD=pandama
      - MONGO_INITDB_DATABASE=pandama
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  neo4j:
    environment:
      - NEO4J_AUTH=neo4j/pandama
    image: neo4j:4.4.3
    restart: always
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

  elasticsearch:
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=pandama
      - http.host=0.0.0.0
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
    restart: always
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  rabbitmq:
    environment:
      - RABBITMQ_SSL_CA_FILE=/certs/rabbitmq/ca_certificate.pem
      - RABBITMQ_SSL_CERT_FILE=/certs/rabbitmq/server_certificate.pem
      - RABBITMQ_SSL_KEY_FILE=/certs/rabbitmq/server_key.pem
      - RABBITMQ_DEFAULT_USER=pandama
      - RABBITMQ_DEFAULT_PASS=pandama
    restart: always
    ports:
      - "15672:15672"
      - "15671:15671"
      - "5672:5672"
      - "5671:5671"
    volumes:
      - ./data/rabbitmq/:/var/lib/rabbitmq/
      - ./certs/rabbitmq/:/certs/rabbitmq/

  kibana:
    restart: always
    ports:
      - "5601:5601"
    volumes:
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml

  logstash:
    restart: always
    ports:
      - "5044:5044"
      - "5001:5000/tcp"
      - "5001:5000/udp"
      - "9600:9600"
    volumes:
      # - ./config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  
  filebeat:
    restart: always
    volumes:
      - ./logs:/logs
      - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml
    command: filebeat -e -d "*"

  celery_worker:
    image: pandama_web
    restart: always
    env_file: .env.prod
    command: bash ./wait-for-it.sh postgres:5432 -t 0 -s -- 
      sh -c "
      python3 manage.py makemigrations commons &&  
      python3 manage.py makemigrations customers &&  
      python3 manage.py makemigrations catalogs &&  
      python3 manage.py makemigrations carts &&  
      python3 manage.py makemigrations products &&  
      python3 manage.py makemigrations orders &&  
      python3 manage.py migrate && 
      celery -A config worker -c 1 --beat -l INFO"

  celery_beat:
    environment:
      - POSTGRES_USER=pandama
      - POSTGRES_PASSWORD=pandama
      - POSTGRES_DB=pandama
    image: pandama_web
    restart: always
    env_file: .env.prod
    command: bash ./wait-for-it.sh postgres:5432 -t 0 -s -- 
      celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler

    

  web:
    image: pandama_web
    restart: always
    env_file: .env.prod
    command: 
      bash ./wait-for-it.sh postgres:5432 -t 0 -s -- 
      gunicorn --bind :8000 config.wsgi
    volumes:
      - static_data:/code/static
    networks:
      - inner_pandama
      - outer_pandama

  nginx:
    image: nginx:1.13
    restart: always
    ports:
      - 80:80
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./logs/nginx/access.log:/var/log/nginx/access.log
    depends_on:
      - web
    networks:
      - outer_pandama

volumes:
  elasticsearch_data:
  postgres_data:
  redis_data:
  mongo_data:
  rabbitmq_data:
  neo4j_data:
  static_data: